/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package editor.domain.measures;

import editor.gui.ResourceFactory;
import java.awt.Dimension;
import java.awt.Frame;
import javax.swing.Icon;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elvio
 */
public class ResultTableDialog extends javax.swing.JDialog {

    private JTable table;
    private FormulaMeasure measure;
    
    public ResultTableDialog(Frame owner, boolean modal) {
        super(owner, modal);
        initComponents();
    }
    
    public final Icon ERROR16_ICON = ResourceFactory.getInstance().getError16();
    public final Icon EMPTY16_ICON = ResourceFactory.getInstance().getEmpty16();
    
    public void showModalDialog(MeasurePage page, int measNum) {
        table = new JTable(null);
        
        measure = (FormulaMeasure)page.measures.get(measNum);
        
        // Prepare table columns
        String[] colNames = new String[2 + page.varListAssignments.assigns.size()];
        colNames[0] = "";
        for (int i=0; i<page.varListAssignments.assigns.size(); i++)
            colNames[i+1] = page.varListAssignments.assigns.get(i).varName;
        colNames[colNames.length-1] = measure.getFormula().getExpr();
        
        // Prepare table data
        Object[][] data = new Object[measure.getResults().table.size()][colNames.length];
        for (int r=0; r<measure.getResults().table.size(); r++) {
            ResultEntry entry = measure.getResults().table.get(r);
            data[r][0] = entry.isComputedOk() ? EMPTY16_ICON : ERROR16_ICON;
            for (int c=0; c<page.varListAssignments.assigns.size(); c++) {
                String varName = page.varListAssignments.assigns.get(c).varName;
                data[r][c+1] = entry.assign.binding.get(varName);
            }
            data[r][colNames.length-1] = entry.isComputedOk() ? entry.toString() : "-";
        }
        
        DefaultTableModel model = new DefaultTableModel(data, colNames) {
            @Override public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        table = new JTable(model) {

            @Override
            public Class<?> getColumnClass(int column) {
                if (column == 0)
                    return Icon.class;
                return String.class;
            }
        };
        table.setPreferredScrollableViewportSize(table.getPreferredSize());
        table.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (measure.getResults().table.size() > 0)
            table.getSelectionModel().setSelectionInterval(0, 0);
//        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//            @Override
//            public void valueChanged(ListSelectionEvent e) {
////                System.out.println("table selection changed!! "+e);
//                mainInterface.invalidateGUI();
//            }
//        });
        table.getColumnModel().getColumn(0).setWidth(EMPTY16_ICON.getIconWidth()+4);
        table.getColumnModel().getColumn(0).setMaxWidth(EMPTY16_ICON.getIconWidth()+4);
        table.getColumnModel().getColumn(0).setMinWidth(EMPTY16_ICON.getIconWidth()+4);
        for (int i=1; i<table.getColumnCount() - 1; i++) {
            table.getColumnModel().getColumn(i).sizeWidthToFit();
        }        
        
        scrollPane.setViewportView(table);

        Dimension dim = new Dimension((int)(getOwner().getWidth()*0.8), 
                                      (int)(getOwner().getHeight()*0.7));
        dim.width = Math.max(dim.width, 300);
        dim.height = Math.max(dim.height, 200);
        jPanelCenter.setMinimumSize(dim);
        jPanelCenter.setPreferredSize(dim);
        pack();
        setLocationRelativeTo(getOwner());

        setVisible(true);
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelCenter = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        jPanelBottom = new javax.swing.JPanel();
        jButtonClose = new javax.swing.JButton();

        setTitle("Result table:");

        jPanelCenter.setBorder(javax.swing.BorderFactory.createTitledBorder("Results:"));
        jPanelCenter.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelCenter.add(scrollPane, gridBagConstraints);

        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jPanelBottom.setLayout(new java.awt.GridBagLayout());

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        jPanelBottom.add(jButtonClose, gridBagConstraints);

        getContentPane().add(jPanelBottom, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                setVisible(false);
                dispose();
            }
        });
        scrollPane.setViewportView(null);
        table = null;
    }//GEN-LAST:event_jButtonCloseActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JPanel jPanelBottom;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
