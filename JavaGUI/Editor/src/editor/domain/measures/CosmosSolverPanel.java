/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package editor.domain.measures;

import common.Util;
import editor.domain.NetPage;
import editor.gui.net.IndeterminateListCellRenderer;

/**
 *
 * @author benoit
 */
public class CosmosSolverPanel extends SolverPanel {

    private boolean initializing = false;
    private CosmosSolverParams params;
    /**
     * Creates new form CosmosSolverPanel
     */
    public CosmosSolverPanel() {
        initComponents();
        Util.reformatPanelsForPlatformLookAndFeel(this);
        initializing = true;
        
        exprField_epsilon.setExprListener(solverExprListener);
        exprField_timeT.setExprListener(solverExprListener);
        exprField_maxIters.setExprListener(solverExprListener);
        exprField_maxDotMarkings.setExprListener(solverExprListener);

        jComboBox_solverMode.setRenderer(new IndeterminateListCellRenderer());
        for (CosmosSolverParams.SolverMode sm : CosmosSolverParams.SolverMode.values())
            jComboBox_solverMode.addItem(sm);
        
        if (Util.isOSX()) {
            toggle_steadyState.putClientProperty("JButton.buttonType", "segmented");
            toggle_steadyState.putClientProperty("JButton.segmentPosition", "first");
            toggle_simulation.putClientProperty("JButton.buttonType", "segmented");
            toggle_simulation.putClientProperty("JButton.segmentPosition", "middle");
            toggle_transient.putClientProperty("JButton.buttonType", "segmented");
            toggle_transient.putClientProperty("JButton.segmentPosition", "last");
        }
        
        initializing = false;
    }
    
    @Override
    public void initializeFor(SolverParams _params, NetPage page, NetPage evalPage, 
                              boolean simplifiedUI, MeasurePage measPage) 
    {
        initializing = true;
        
        params = (CosmosSolverParams)Util.deepCopy(_params);
        
        exprField_epsilon.initializeFor(params.epsilon.getEditableValue(), page);
        exprField_maxIters.initializeFor(params.maxIters.getEditableValue(), page);
        jComboBox_solverMode.setSelectedItem(params.mode);
        toggle_steadyState.setSelected(params.solTime == CosmosSolverParams.SolutionTime.STEADY_STATE);
        toggle_simulation.setSelected(params.solTime == CosmosSolverParams.SolutionTime.SIMULATED);
        toggle_transient.setSelected(params.solTime == CosmosSolverParams.SolutionTime.TRANSIENT);
        exprField_timeT.setEnabled(toggle_transient.isSelected());
        jLabel_at.setEnabled(toggle_transient.isSelected());
        exprField_timeT.initializeFor(params.timeT.getEditableValue(), page);
        exprField_maxDotMarkings.initializeFor(params.maxDotMarkings.getEditableValue(), page);
        
        initializing = false;
    }

    @Override
    public void deinitialize() {
        exprField_epsilon.deinitialize();
        exprField_maxIters.deinitialize();
        exprField_timeT.deinitialize();
        exprField_maxDotMarkings.deinitialize();
        params = null;
    }

    @Override
    public SolverParams currParams() {
        return params;
    }

    @Override
    public boolean areParamsCorrect() {
        return exprField_epsilon.isValueValid() &&
               exprField_maxIters.isValueValid() &&
               exprField_timeT.isValueValid() &&
               exprField_maxDotMarkings.isValueValid();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        exprField_epsilon = new editor.domain.measures.ExprField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_solverMode = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel_at = new javax.swing.JLabel();
        exprField_timeT = new editor.domain.measures.ExprField();
        jPanel1 = new javax.swing.JPanel();
        toggle_transient = new javax.swing.JToggleButton();
        toggle_simulation = new javax.swing.JToggleButton();
        toggle_steadyState = new javax.swing.JToggleButton();
        exprField_maxIters = new editor.domain.measures.ExprField();
        jLabel4 = new javax.swing.JLabel();
        exprField_maxDotMarkings = new editor.domain.measures.ExprField();

        jLabel1.setText("Epsilon:");

        exprField_epsilon.setOkNoLabelVisible(false);

        jLabel2.setText("Solver mode:");

        jComboBox_solverMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_solverModeActionPerformed(evt);
            }
        });

        jLabel3.setText("Max iterations:");

        jLabel5.setText("CTMC solution is computed in:");

        jLabel_at.setText("at:");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        toggle_transient.setText("Transient");
        toggle_transient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggle_transientActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(toggle_transient, gridBagConstraints);

        toggle_simulation.setText("Simulation");
        toggle_simulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggle_simulationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel1.add(toggle_simulation, gridBagConstraints);

        toggle_steadyState.setText("Steady state");
        toggle_steadyState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggle_steadyStateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(toggle_steadyState, gridBagConstraints);

        exprField_maxIters.setOkNoLabelVisible(false);

        jLabel4.setText("Max. markings in RG plot:");

        exprField_maxDotMarkings.setOkNoLabelVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_at)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exprField_timeT, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox_solverMode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exprField_epsilon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addComponent(exprField_maxIters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exprField_maxDotMarkings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exprField_epsilon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(exprField_maxIters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox_solverMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(exprField_maxDotMarkings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exprField_timeT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_at, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_solverModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_solverModeActionPerformed
        if (initializing)
            return;
        
        Object selObj = jComboBox_solverMode.getSelectedItem();
        CosmosSolverParams.SolverMode sm = (CosmosSolverParams.SolverMode)selObj;
        if (sm == params.mode)
            return;
        params.mode = sm;
        fireSolverParamsModified();
    }//GEN-LAST:event_jComboBox_solverModeActionPerformed

    private void toggle_steadyStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggle_steadyStateActionPerformed
        if (initializing)
            return;
        if (params.solTime == CosmosSolverParams.SolutionTime.STEADY_STATE)
            return;
        params.solTime = CosmosSolverParams.SolutionTime.STEADY_STATE;
        fireSolverParamsModified();
    }//GEN-LAST:event_toggle_steadyStateActionPerformed

    private void toggle_transientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggle_transientActionPerformed
        if (initializing)
            return;
        if (params.solTime == CosmosSolverParams.SolutionTime.TRANSIENT)
            return;
        params.solTime = CosmosSolverParams.SolutionTime.TRANSIENT;
        fireSolverParamsModified();
    }//GEN-LAST:event_toggle_transientActionPerformed

    private void toggle_simulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggle_simulationActionPerformed
        if (initializing)
            return;
        if (params.solTime == CosmosSolverParams.SolutionTime.SIMULATED)
            return;
        params.solTime = CosmosSolverParams.SolutionTime.SIMULATED;
        fireSolverParamsModified();
    }//GEN-LAST:event_toggle_simulationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private editor.domain.measures.ExprField exprField_epsilon;
    private editor.domain.measures.ExprField exprField_maxDotMarkings;
    private editor.domain.measures.ExprField exprField_maxIters;
    private editor.domain.measures.ExprField exprField_timeT;
    private javax.swing.JComboBox<CosmosSolverParams.SolverMode> jComboBox_solverMode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel_at;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton toggle_simulation;
    private javax.swing.JToggleButton toggle_steadyState;
    private javax.swing.JToggleButton toggle_transient;
    // End of variables declaration//GEN-END:variables
}
