/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package editor.domain.measures;

import common.Util;
import editor.domain.NetPage;

/**
 *
 * @author elvio
 */
public class NSolvePanel extends SolverPanel {
    
    private boolean initializing = false;
    private NSolveParams params = null;

    /**
     * Creates new form NSolvePanel
     */
    public NSolvePanel() {
        initComponents();
        Util.reformatPanelsForPlatformLookAndFeel(this);
        initializing = true;
        
        // Initialize panel fields
        exprFieldEpsilon.setExprListener(solverExprListener);
        exprFieldMaxCpuTime.setExprListener(solverExprListener);
        exprFieldMaxMemory.setExprListener(solverExprListener);
        exprFieldMaxIters.setExprListener(solverExprListener);
        exprFieldMaxLocalStates.setExprListener(solverExprListener);
        exprFieldMaxTotalStates.setExprListener(solverExprListener);
        exprFieldRelaxation.setExprListener(solverExprListener);
        
        for (String method : NSolveParams.kwnownNumericalMethods)
            comboBoxMethod.addItem(method);
        
        initializing = false;
    }
    
    @Override
    public void initializeFor(SolverParams _params, NetPage page, NetPage evalPage, 
                              boolean simplifiedUI, MeasurePage measPage) 
    {
        initializing = true;
        
        params = (NSolveParams)Util.deepCopy(_params);
        
        // Bind panel fields to the current parameters
        exprFieldEpsilon.initializeFor(params.epsilon.getEditableValue(), page);
        exprFieldMaxLocalStates.initializeFor(params.maxLocalStates.getEditableValue(), page);
        exprFieldMaxTotalStates.initializeFor(params.maxTotalStates.getEditableValue(), page);
        exprFieldMaxIters.initializeFor(params.maxIters.getEditableValue(), page);
        exprFieldMaxCpuTime.initializeFor(params.maxIters.getEditableValue(), page);
        exprFieldMaxMemory.initializeFor(params.maxMemory.getEditableValue(), page);
        exprFieldRelaxation.initializeFor(params.relaxFactor.getEditableValue(), page);
        comboBoxMethod.setSelectedItem(params.numericalMethod);
        
        initializing = false;
    }
    
    @Override
    public void deinitialize() {
        // Unbind panel fields to the current parameters, and delete params
        exprFieldEpsilon.deinitialize();
        exprFieldMaxCpuTime.deinitialize();
        exprFieldMaxMemory.deinitialize();
        exprFieldMaxIters.deinitialize();
        exprFieldMaxLocalStates.deinitialize();
        exprFieldMaxTotalStates.deinitialize();
        exprFieldRelaxation.deinitialize();

        params = null;
    }

    @Override
    public SolverParams currParams() {
        return params;
    }

    @Override
    public boolean areParamsCorrect() {
        return exprFieldEpsilon.isValueValid() &&
               exprFieldMaxCpuTime.isValueValid() &&
               exprFieldMaxMemory.isValueValid() &&
               exprFieldMaxIters.isValueValid() &&
               exprFieldMaxLocalStates.isValueValid() &&
               exprFieldMaxTotalStates.isValueValid() &&
               exprFieldRelaxation.isValueValid();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMaxLocalStates = new javax.swing.JLabel();
        labelMaxTotalStates = new javax.swing.JLabel();
        labelMethod = new javax.swing.JLabel();
        labelMaxIters = new javax.swing.JLabel();
        labelMaxCpuTime = new javax.swing.JLabel();
        labelRelaxation = new javax.swing.JLabel();
        labelEpsilon = new javax.swing.JLabel();
        exprFieldMaxLocalStates = new editor.domain.measures.ExprField();
        exprFieldMaxTotalStates = new editor.domain.measures.ExprField();
        exprFieldEpsilon = new editor.domain.measures.ExprField();
        exprFieldMaxIters = new editor.domain.measures.ExprField();
        comboBoxMethod = new javax.swing.JComboBox<String>();
        exprFieldRelaxation = new editor.domain.measures.ExprField();
        exprFieldMaxCpuTime = new editor.domain.measures.ExprField();
        labelMaxMemory = new javax.swing.JLabel();
        exprFieldMaxMemory = new editor.domain.measures.ExprField();

        labelMaxLocalStates.setText("Max Local States:");

        labelMaxTotalStates.setText("Max Total States:");

        labelMethod.setText("Numerical Method:");

        labelMaxIters.setText("Max Iterations:");

        labelMaxCpuTime.setText("Max CPU time (sec):");

        labelRelaxation.setText("Relaxation factor:");

        labelEpsilon.setText("Epsilon:");

        comboBoxMethod.setEditable(true);
        comboBoxMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMethodActionPerformed(evt);
            }
        });

        labelMaxMemory.setText("Max. memory:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelMethod)
                    .addComponent(labelMaxLocalStates)
                    .addComponent(labelEpsilon)
                    .addComponent(labelRelaxation))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exprFieldEpsilon, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                                    .addComponent(exprFieldMaxLocalStates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelMaxTotalStates)
                                    .addComponent(labelMaxIters))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exprFieldMaxTotalStates, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                                    .addComponent(exprFieldMaxIters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(comboBoxMethod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(exprFieldRelaxation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelMaxCpuTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exprFieldMaxCpuTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelMaxMemory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exprFieldMaxMemory, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelEpsilon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exprFieldEpsilon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMaxIters, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exprFieldMaxIters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMaxLocalStates, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(exprFieldMaxLocalStates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exprFieldMaxTotalStates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelMaxTotalStates, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(exprFieldRelaxation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelRelaxation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exprFieldMaxCpuTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelMaxCpuTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelMaxMemory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(exprFieldMaxMemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMethodActionPerformed
        if (initializing)
            return;
        
        String method = comboBoxMethod.getSelectedItem().toString();
        if (method.equals(params.numericalMethod))
            return;
        params.numericalMethod = method;
        fireSolverParamsModified();
    }//GEN-LAST:event_comboBoxMethodActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxMethod;
    private editor.domain.measures.ExprField exprFieldEpsilon;
    private editor.domain.measures.ExprField exprFieldMaxCpuTime;
    private editor.domain.measures.ExprField exprFieldMaxIters;
    private editor.domain.measures.ExprField exprFieldMaxLocalStates;
    private editor.domain.measures.ExprField exprFieldMaxMemory;
    private editor.domain.measures.ExprField exprFieldMaxTotalStates;
    private editor.domain.measures.ExprField exprFieldRelaxation;
    private javax.swing.JLabel labelEpsilon;
    private javax.swing.JLabel labelMaxCpuTime;
    private javax.swing.JLabel labelMaxIters;
    private javax.swing.JLabel labelMaxLocalStates;
    private javax.swing.JLabel labelMaxMemory;
    private javax.swing.JLabel labelMaxTotalStates;
    private javax.swing.JLabel labelMethod;
    private javax.swing.JLabel labelRelaxation;
    // End of variables declaration//GEN-END:variables
}
