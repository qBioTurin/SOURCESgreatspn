/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package editor.domain.measures;

import common.Util;
import editor.domain.NetPage;

/**
 *
 * @author elvio
 */
public class MC4CSLTASolverPanel extends SolverPanel {

    private boolean initializing = false;
    private MC4CSLTASolverParams params;
    /**
     * Creates new form MC4CSLTASolverPanel
     */
    public MC4CSLTASolverPanel() {
        initComponents();
        Util.reformatPanelsForPlatformLookAndFeel(this);
        initializing = true;
        
        exprField_epsilon.setExprListener(solverExprListener);
        exprField_timeT.setExprListener(solverExprListener);
        exprField_maxDotMarkings.setExprListener(solverExprListener);

        for (MC4CSLTASolverParams.MrpMethod mm : MC4CSLTASolverParams.MrpMethod.values())
            jComboBox_mrpMethod.addItem(mm);
        for (MC4CSLTASolverParams.LinearAlgoType lat : MC4CSLTASolverParams.LinearAlgoType.values())
            jComboBox_linAlgo.addItem(lat);
        for (MC4CSLTASolverParams.McSolutionType mcst : MC4CSLTASolverParams.McSolutionType.values())
            jComboBox_mcSolType.addItem(mcst);
        
        if (Util.isOSX()) {
            toggle_steadyState.putClientProperty("JButton.buttonType", "segmented");
            toggle_steadyState.putClientProperty("JButton.segmentPosition", "first");
            toggle_transient.putClientProperty("JButton.buttonType", "segmented");
            toggle_transient.putClientProperty("JButton.segmentPosition", "last");
        }
        
        initializing = false;
    }
    
    @Override
    public void initializeFor(SolverParams _params, NetPage page, NetPage evalPage, 
                              boolean simplifiedUI, MeasurePage measPage) 
    {
        initializing = true;
        
        params = (MC4CSLTASolverParams)Util.deepCopy(_params);
        
        exprField_epsilon.initializeFor(params.epsilon.getEditableValue(), page);
        jCheckBox_onTheFly.setSelected(params.onTheFly);
        jComboBox_mrpMethod.setSelectedItem(params.mrpMethod);
        jComboBox_linAlgo.setSelectedItem(params.linAlgo);
        jComboBox_mcSolType.setSelectedItem(params.mcSolType);
        toggle_steadyState.setSelected(params.piTime == MC4CSLTASolverParams.PerformanceIndexTime.STEADY_STATE);
        toggle_transient.setSelected(params.piTime == MC4CSLTASolverParams.PerformanceIndexTime.TRANSIENT);
        exprField_timeT.setEnabled(toggle_transient.isSelected());
        jLabel_at.setEnabled(toggle_transient.isSelected());
        exprField_timeT.initializeFor(params.timeT.getEditableValue(), page);
        exprField_maxDotMarkings.initializeFor(params.maxDotMarkings.getEditableValue(), page);
        checkBox_dotClusters.setSelected(params.dotClusters);
        
        initializing = false;
    }

    @Override
    public void deinitialize() {
        exprField_epsilon.deinitialize();
        exprField_timeT.deinitialize();
        exprField_maxDotMarkings.deinitialize();
        params = null;
    }

    @Override
    public SolverParams currParams() {
        return params;
    }

    @Override
    public boolean areParamsCorrect() {
        return exprField_epsilon.isValueValid() &&
               exprField_timeT.isValueValid() &&
               exprField_maxDotMarkings.isValueValid();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        exprField_epsilon = new editor.domain.measures.ExprField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_mrpMethod = new javax.swing.JComboBox<MC4CSLTASolverParams.MrpMethod>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_linAlgo = new javax.swing.JComboBox<MC4CSLTASolverParams.LinearAlgoType>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_mcSolType = new javax.swing.JComboBox<MC4CSLTASolverParams.McSolutionType>();
        jCheckBox_onTheFly = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel_at = new javax.swing.JLabel();
        exprField_timeT = new editor.domain.measures.ExprField();
        jPanel1 = new javax.swing.JPanel();
        toggle_transient = new javax.swing.JToggleButton();
        toggle_steadyState = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        exprField_maxDotMarkings = new editor.domain.measures.ExprField();
        checkBox_dotClusters = new javax.swing.JCheckBox();

        jLabel1.setText("Epsilon:");

        exprField_epsilon.setOkNoLabelVisible(false);

        jLabel2.setText("MRP Method:");

        jComboBox_mrpMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_mrpMethodActionPerformed(evt);
            }
        });

        jLabel3.setText("Linear Solution:");

        jComboBox_linAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_linAlgoActionPerformed(evt);
            }
        });

        jLabel4.setText("Solution method:");

        jComboBox_mcSolType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_mcSolTypeActionPerformed(evt);
            }
        });

        jCheckBox_onTheFly.setText("On the fly solution");
        jCheckBox_onTheFly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_onTheFlyActionPerformed(evt);
            }
        });

        jLabel5.setText("Performance indexes are computed in:");

        jLabel_at.setText("at:");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        toggle_transient.setText("Transient");
        toggle_transient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggle_transientActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel1.add(toggle_transient, gridBagConstraints);

        toggle_steadyState.setText("Steady state");
        toggle_steadyState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggle_steadyStateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(toggle_steadyState, gridBagConstraints);

        jLabel6.setText("Max. markings in RG/TRG plot:");

        exprField_maxDotMarkings.setOkNoLabelVisible(false);

        checkBox_dotClusters.setText("Cluster MRP state partitions.");
        checkBox_dotClusters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBox_dotClustersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox_mrpMethod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exprField_epsilon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox_linAlgo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox_mcSolType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_at)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exprField_timeT, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jCheckBox_onTheFly))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exprField_maxDotMarkings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBox_dotClusters)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exprField_epsilon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jComboBox_linAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(5, 5, 5)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox_mcSolType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_mrpMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_onTheFly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exprField_maxDotMarkings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(exprField_timeT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_at, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(checkBox_dotClusters)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox_onTheFlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_onTheFlyActionPerformed
        if (initializing)
            return;
        params.onTheFly = jCheckBox_onTheFly.isSelected();
        fireSolverParamsModified();
    }//GEN-LAST:event_jCheckBox_onTheFlyActionPerformed

    private void jComboBox_mrpMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_mrpMethodActionPerformed
        if (initializing)
            return;
        
        Object selObj = jComboBox_mrpMethod.getSelectedItem();
        MC4CSLTASolverParams.MrpMethod mm = (MC4CSLTASolverParams.MrpMethod)selObj;
        if (mm == params.mrpMethod)
            return;
        params.mrpMethod = mm;
        fireSolverParamsModified();
    }//GEN-LAST:event_jComboBox_mrpMethodActionPerformed

    private void jComboBox_linAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_linAlgoActionPerformed
        if (initializing)
            return;
        
        Object selObj = jComboBox_linAlgo.getSelectedItem();
        MC4CSLTASolverParams.LinearAlgoType lat = (MC4CSLTASolverParams.LinearAlgoType)selObj;
        if (lat == params.linAlgo)
            return;
        params.linAlgo = lat;
        fireSolverParamsModified();
    }//GEN-LAST:event_jComboBox_linAlgoActionPerformed

    private void jComboBox_mcSolTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_mcSolTypeActionPerformed
        if (initializing)
            return;
        
        Object selObj = jComboBox_mcSolType.getSelectedItem();
        MC4CSLTASolverParams.McSolutionType mcst = (MC4CSLTASolverParams.McSolutionType)selObj;
        if (mcst == params.mcSolType)
            return;
        params.mcSolType = mcst;
        fireSolverParamsModified();
    }//GEN-LAST:event_jComboBox_mcSolTypeActionPerformed

    private void toggle_steadyStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggle_steadyStateActionPerformed
        if (initializing)
            return;
        if (params.piTime == MC4CSLTASolverParams.PerformanceIndexTime.STEADY_STATE)
            return;
        params.piTime = MC4CSLTASolverParams.PerformanceIndexTime.STEADY_STATE;
        fireSolverParamsModified();
    }//GEN-LAST:event_toggle_steadyStateActionPerformed

    private void toggle_transientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggle_transientActionPerformed
        if (initializing)
            return;
        if (params.piTime == MC4CSLTASolverParams.PerformanceIndexTime.TRANSIENT)
            return;
        params.piTime = MC4CSLTASolverParams.PerformanceIndexTime.TRANSIENT;
        fireSolverParamsModified();
    }//GEN-LAST:event_toggle_transientActionPerformed

    private void checkBox_dotClustersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBox_dotClustersActionPerformed
        if (initializing)
            return;
        params.dotClusters = checkBox_dotClusters.isSelected();
        fireSolverParamsModified();
    }//GEN-LAST:event_checkBox_dotClustersActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBox_dotClusters;
    private editor.domain.measures.ExprField exprField_epsilon;
    private editor.domain.measures.ExprField exprField_maxDotMarkings;
    private editor.domain.measures.ExprField exprField_timeT;
    private javax.swing.JCheckBox jCheckBox_onTheFly;
    private javax.swing.JComboBox<MC4CSLTASolverParams.LinearAlgoType> jComboBox_linAlgo;
    private javax.swing.JComboBox<MC4CSLTASolverParams.McSolutionType> jComboBox_mcSolType;
    private javax.swing.JComboBox<MC4CSLTASolverParams.MrpMethod> jComboBox_mrpMethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_at;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton toggle_steadyState;
    private javax.swing.JToggleButton toggle_transient;
    // End of variables declaration//GEN-END:variables
}
