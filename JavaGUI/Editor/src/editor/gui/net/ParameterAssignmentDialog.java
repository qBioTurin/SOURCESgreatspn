/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package editor.gui.net;

import editor.domain.Expr;
import editor.domain.Node;
import editor.domain.elements.GspnPage;
import editor.domain.elements.TemplateVariable;
import editor.domain.grammar.TemplateBinding;
import editor.domain.grammar.VarListMultiAssignment;
import editor.domain.grammar.VarMultiAssignment;
import editor.domain.measures.VarMultiAssignmentListPanel;
import editor.domain.measures.VarMultiAssignmentListPanel.MultiAssignmentListListener;
import java.awt.BorderLayout;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JFrame;

/**
 *
 * @author elvio
 */
public class ParameterAssignmentDialog extends javax.swing.JDialog implements MultiAssignmentListListener {

    VarListMultiAssignment varAssign;
    VarMultiAssignmentListPanel varPanel;
    GspnPage page;
    boolean ok = false, initializing = true;
    
    /**
     * Creates new form ParameterAssignmentDialog
     */
    public ParameterAssignmentDialog(JFrame owner, GspnPage page, VarListMultiAssignment varAssign) {
        super(owner, true);
        initComponents();
        this.page = page;
        this.varAssign = varAssign;
    }
    
    public static TemplateBinding askParamAssignment(JFrame owner, GspnPage page) {        
        // Prepare the template bindings
        VarListMultiAssignment varAssign = new VarListMultiAssignment();
        Map<String, TemplateVariable> gspnVars = new TreeMap<>();
        for (Node node : page.nodes) {
            if (node instanceof TemplateVariable) {
                TemplateVariable tvar = (TemplateVariable)node;
                gspnVars.put(node.getUniqueName(), tvar);
                if (null == varAssign.getAssignmentFor(node.getUniqueName())) {
                    varAssign.assigns.add(VarMultiAssignment.createSingle(
                            tvar.getUniqueName(), tvar.getType(), tvar.getLastBindingExpr().getExpr(), false));
                }
            }
        }
        if (varAssign.assigns.isEmpty())
            return new TemplateBinding(); // Nothing to ask to the user
        
        ParameterAssignmentDialog dlg = new ParameterAssignmentDialog(owner, page, varAssign);
        if (!dlg.showDialog())
            return null;
        
        TemplateBinding bind = new TemplateBinding();
        for (VarMultiAssignment vma : varAssign.assigns) {
            bind.bindSingleValue(vma.varName, vma.singleVal);
        }
        for (Map.Entry<String, TemplateVariable> e : gspnVars.entrySet()) {
            Expr val = bind.getSingleValueBoundTo(e.getValue());
            if (val != null)
                e.getValue().getLastBindingExpr().setExpr(val.getExpr());
        }
        System.out.println("BINDING\n"+bind+"\n");

        return bind;
    }
    
    private boolean showDialog() {        
        varPanel = new VarMultiAssignmentListPanel();
        varPanel.setMultiAssignmentListListener(this);
        varPanel.initializeFor(varAssign, page, false);
        panelParamAssign.add(varPanel, BorderLayout.CENTER);

        initializing = false;
        onEditingListAssignment();
        getRootPane().setDefaultButton(buttonOk);
        pack();
        setLocationRelativeTo(getParent());
        setVisible(true);
        
        varAssign.assigns = varPanel.getCurrentAssignment().assigns;
        varPanel.deinitialize();
        
        return ok;
    }

    @Override
    public void onNewListAssignment(VarListMultiAssignment vlist) {
    }

    @Override
    public void onEditingListAssignment() {
        buttonOk.setEnabled(varPanel.areAllBindingsValid());
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        resourceFactory = new editor.gui.ResourceFactory();
        resourceFactory1 = new editor.gui.ResourceFactory();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        panelParamAssign = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Parameter assignment:");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        buttonOk.setText("Ok");
        buttonOk.setEnabled(false);
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(buttonOk, gridBagConstraints);

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(buttonCancel, gridBagConstraints);

        panelParamAssign.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameter value:"));
        panelParamAssign.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(panelParamAssign, gridBagConstraints);

        jLabel1.setIcon(resourceFactory.getChangeBindings32());
        jLabel1.setText("Assign a value to all the model parameters.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 200);
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        ok = true;
        setVisible(false);
    }//GEN-LAST:event_buttonOkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelParamAssign;
    private editor.gui.ResourceFactory resourceFactory;
    private editor.gui.ResourceFactory resourceFactory1;
    // End of variables declaration//GEN-END:variables
}
